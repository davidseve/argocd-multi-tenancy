
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: argocd
  namespace: argocd-instance
spec:
  rbac:
    defaultPolicy: 'role:none'
    policy: |-
      # Default policy with no privileges
      p, role:none, applications, get, */*, deny
      p, role:none, certificates, get, *, deny
      p, role:none, clusters, get, *, deny
      p, role:none, repositories, get, *, deny
      p, role:none, projects, get, *, deny
      p, role:none, accounts, get, *, deny
      p, role:none, gpgkeys, get, *, deny

      # Admin privileges to admin user
      g, kubeadmin, role:admin
      g, system:cluster-admins, role:admin

      #Privileges at project level
      g, group-a, role:group-a
      p, role:group-a, clusters, get, https://kubernetes.default.svc, allow

    scopes: '[groups,name]'

  server:
    route:
      enabled: true #creates an openshift route to access Argo CD UI
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    service:
      type: ''
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  monitoring:
    enabled: false
  notifications:
    enabled: true
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  sso:
    dex:
      openShiftOAuth: true
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
    provider: dex
  # applicationSet:
    # resources:
    #   limits:
    #     cpu: '2'
    #     memory: 1Gi
    #   requests:
    #     cpu: 250m
    #     memory: 512Mi
    # webhookServer:
    #   ingress:
    #     enabled: false
    #   route:
    #     enabled: false
  # repo:
  #   resources:
  #     limits:
  #       cpu: '1'
  #       memory: 1Gi
  #     requests:
  #       cpu: 250m
  #       memory: 256Mi
  ha:
    enabled: false
    # resources:
    #   limits:
    #     cpu: 500m
    #     memory: 256Mi
    #   requests:
    #     cpu: 250m
    #     memory: 128Mi
  # redis:
  #   resources:
  #     limits:
  #       cpu: 500m
  #       memory: 256Mi
  #     requests:
  #       cpu: 250m
  #       memory: 128Mi
  # controller:
  #   resources:
  #     limits:
  #       cpu: '2'
  #       memory: 2Gi
  #     requests:
  #       cpu: 250m
  #       memory: 1Gi
